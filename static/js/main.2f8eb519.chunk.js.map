{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["styles","button","height","border","borderRadius","backgroundColor","margin","button1","button2","button3","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","style","onClick","toggleMode3","toggleMode","toggleMode1","toggleMode2","marginRight","for","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","Text","setText","Fragment","heading","value","onChange","event","target","rows","placeholder","color","resize","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","text","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","a2","ans2","match","toString","innerHTML","ans","filter","element","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setAlert","message","setTimeout","_useState3","_useState4","setMode","body","components_Alert","TextForm_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2f8eb519.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\nconst styles={\r\n  button:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '25px',\r\n    backgroundColor: 'gray',\r\n    margin: '0px 5px'\r\n  },\r\n  button1:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'purple',\r\n    margin: '0px 5px'\r\n  },\r\n  button2:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'red',\r\n    margin: '0px 5px'\r\n  },\r\n  button3:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'white',\r\n    margin: '0px 5px'\r\n  }\r\n};\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to='/about'>About</Link>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        {/* <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/> */}\r\n        <button style={styles.button3} onClick={props.toggleMode3}></button>\r\n        <button style={styles.button} onClick={props.toggleMode}></button>\r\n        <button style={styles.button1} onClick={props.toggleMode1}></button>\r\n        <button style={styles.button2} onClick={props.toggleMode2}></button>\r\n        <label className=\"form-check-label\" style={{marginRight:'15px'}} for=\"flexSwitchCheckDefault\">Enable Modes</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:'SetTitle'\r\n};","import React,{useState} from 'react'\r\nimport './TextForm.css'\r\nexport default function TextForm(props) {\r\n\r\n    // const [Mode, setMode] = useState({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    const [Text, setText] = useState('')\r\n    // const [modeBtn, setmodeBtn] = useState(\"Enable Dark Mode\")\r\n\r\n    const handleOnClickU=()=>{\r\n        let newtext=Text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to uppercase\",\"success\")\r\n    }\r\n    const handleRemoveWhitespace=()=>\r\n    {\r\n        let newText = Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"extra spaces removed\",\"success\")\r\n    }\r\n    const handleCopy=()=>\r\n    {\r\n        var text =document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\",\"success\")\r\n    }\r\n    const handleOnClickL=()=>{\r\n        let newtext=Text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to lowercase\",\"success\")\r\n    }\r\n    const handleOnClickClear=()=>{\r\n        let newtext=\"\";\r\n        setText(newtext);\r\n        props.showAlert(\"text cleared\",\"success\")\r\n    }\r\n    const handleOnClickExtractMail=()=>{\r\n        let reg=/\\w+@gmail.com/g;\r\n        let ans=Text.match(reg);\r\n        if(ans!=null)\r\n        {\r\n            let a= ans.toString();\r\n            setText(a);\r\n            document.getElementById('preview').innerHTML=`${ans.length} emails found`\r\n            document.getElementById('preview').style.color='green';\r\n            props.showAlert(\"email extracted\",\"success\")\r\n        }\r\n        else\r\n        {\r\n            props.showAlert(\"email not found \",\"warning\")\r\n        }\r\n    }\r\n    const handleOnClickExtractNumber=()=>{\r\n        let regex=/[0-9]{10}/g;\r\n        let ans2=Text.match(regex);\r\n        let a2;\r\n        if(ans2 != null)\r\n        {\r\n        a2= ans2.toString();\r\n        setText(a2);\r\n        document.getElementById('preview').innerHTML=`${ans2.length} Number found`\r\n        document.getElementById('preview').style.color='green';\r\n        props.showAlert(\"number extracted\",\"success\")\r\n        }\r\n        else\r\n        {\r\n            props.showAlert(\"number not found \",\"warning\")\r\n        }\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    // let toggleMode=()=>{\r\n    //         if(Mode.backgroundColor==='white'){\r\n    //         setMode({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         setmodeBtn(\"Enable Light Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setMode({\r\n    //             color:'black',\r\n    //             backgroundColor:'white'\r\n    //         })\r\n    //         setmodeBtn(\"Enable Dark Mode\");\r\n    //     }\r\n    // }\r\n  return (\r\n    <>\r\n    <div className='container' >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={Text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\" placeholder='Enter text here' style={{backgroundColor:props.mode==='dark'?'#343a40':'white',color:props.mode==='dark'?'white':'black',resize:'none'}}></textarea>\r\n        </div>\r\n        <div className='cont'>\r\n        <button disabled={Text.length===0} className='btn btn-dark' onClick={handleOnClickU} >Convert to uppercase</button>\r\n        <button disabled={Text.length===0} className='btn btn-dark mx-2  butto' onClick={handleOnClickL}>Convert to LowerCase</button>\r\n        <button disabled={Text.length===0}className='btn btn-dark mx-2 butto' onClick={handleOnClickClear} >Clear text</button>\r\n        <button disabled={Text.length===0}className='btn btn-dark mx-2 butto' onClick={handleCopy} >Copy text</button>\r\n        <button disabled={Text.length===0}className='btn btn-dark mx-2 butto' onClick={handleRemoveWhitespace} >Remove WhiteSpace</button>\r\n        {/* <button className='btn btn-warning mx-2 my-3' onClick={toggleMode}>{modeBtn}</button> */}\r\n        <button disabled={Text.length===0}className='btn btn-dark mx-2 butto' onClick={handleOnClickExtractNumber} >Extract Number</button>\r\n        <button disabled={Text.length===0}className='btn btn-dark mx-2 butto' onClick={handleOnClickExtractMail} >Extract email</button>\r\n        </div>\r\n\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2>Your text summary : </h2>\r\n        <p>{Text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {Text.length} characters</p>\r\n        <p>{0.008 * Text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n        <h2>Preview : </h2>\r\n        <p id='preview'></p>\r\n        <p>{Text.length>0?Text:\"Nothing to preview\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div  style={{height:'50px'}}>\r\n    {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\n// import About from './components/About';\nimport { useState } from 'react';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const [mode, setMode] = useState('light');\n  let toggleMode=()=>\n  {\n    // if(mode==='light')\n    // {\n      setMode('dark')\n      document.body.style.backgroundColor='#343a40'\n      document.body.style.color='white'\n      showAlert(\"Gray Dark mode enabled\",\"success\")\n    // }\n    // else{\n    //   setMode('light')\n    //   document.body.style.backgroundColor='white'\n    //   document.body.style.color='black'\n    //   showAlert(\"Light mode enabled\",\"success\")\n    // }\n  }\n  let toggleMode1=()=>\n  {\n    // if(mode==='light')\n    // {\n      setMode('dark')\n      document.body.style.backgroundColor='#4d003e'\n      document.body.style.color='white'\n      showAlert(\"Wine Dark mode enabled\",\"success\")\n    // }\n    // else{\n    //   setMode('light')\n    //   document.body.style.backgroundColor='white'\n    //   document.body.style.color='black'\n    //   showAlert(\"Light mode enabled\",\"success\")\n    // }\n  }\n  let toggleMode2=()=>\n  {\n    // if(mode==='light')\n    // {\n      setMode('dark')\n      document.body.style.backgroundColor='#560202'\n      document.body.style.color='white'\n      showAlert(\"Blood Dark mode enabled\",\"success\")\n    // }\n    // else{\n    //   setMode('light')\n    //   document.body.style.backgroundColor='white'\n    //   document.body.style.color='black'\n    //   showAlert(\"Light mode enabled\",\"success\")\n    // }\n  }\n  let toggleMode3=()=>\n  {\n    // if(mode==='light')\n    // {\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      document.body.style.color='black'\n      showAlert(\"Light mode enabled\",\"success\")\n    // }\n    // else{\n    //   setMode('light')\n    //   document.body.style.backgroundColor='white'\n    //   document.body.style.color='black'\n    //   showAlert(\"Light mode enabled\",\"success\")\n    // }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtills\" mode={mode} toggleMode={toggleMode} toggleMode1={toggleMode1} toggleMode2={toggleMode2} toggleMode3={toggleMode3} />\n    <Alert alert={alert}/>\n    <div className='container my-3' >\n    {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<TextForm heading ='Enter the text below' mode={mode} showAlert={showAlert}/>}/>\n        </Routes> */}\n        <TextForm showAlert={showAlert} heading ='Enter the text below' mode={mode}/>\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
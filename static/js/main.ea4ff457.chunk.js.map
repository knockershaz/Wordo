{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["styles","button","height","border","borderRadius","backgroundColor","margin","button1","button2","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","style","onClick","toggleMode","role","for","TextForm","_useState","useState","_useState2","Object","slicedToArray","Text","setText","Fragment","heading","value","onChange","event","target","rows","placeholder","color","resize","newtext","toUpperCase","toLowerCase","text","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","ans2","match","a2","toString","innerHTML","length","ans","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ea4ff457.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\nconst styles={\r\n  button:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'red',\r\n    margin: '0px 5px'\r\n  },\r\n  button1:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'blue',\r\n    margin: '0px 5px'\r\n  },\r\n  button2:{\r\n    height: '15px',\r\n    border: '2px solid black',\r\n    borderRadius: '24px',\r\n    backgroundColor: 'green',\r\n    margin: '0px 5px'\r\n  }\r\n};\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" to=\"/about\">About</Link>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <button style={styles.button}></button>\r\n        <button style={styles.button1}></button>\r\n        <button style={styles.button2}></button>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable Modes</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title:'SetTitle'\r\n};","import React,{useState} from 'react'\r\nexport default function TextForm(props) {\r\n\r\n    // const [Mode, setMode] = useState({\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    const [Text, setText] = useState('')\r\n    // const [modeBtn, setmodeBtn] = useState(\"Enable Dark Mode\")\r\n\r\n    const handleOnClickU=()=>{\r\n        let newtext=Text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const handleRemoveWhitespace=()=>\r\n    {\r\n        let newText = Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const handleCopy=()=>\r\n    {\r\n        var text =document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleOnClickL=()=>{\r\n        let newtext=Text.toLowerCase();\r\n        setText(newtext);\r\n    }\r\n    const handleOnClickClear=()=>{\r\n        let newtext=\"\";\r\n        setText(newtext);\r\n    }\r\n    const handleOnClickExtractMail=()=>{\r\n        let reg=/\\w+@gmail.com/g;\r\n        let ans=Text.match(reg);\r\n        let a= ans.toString();\r\n        setText(a);\r\n        document.getElementById('preview').innerHTML=`${ans.length} emails found`\r\n        document.getElementById('preview').style.color='green';\r\n    }\r\n    const handleOnClickExtractNumber=()=>{\r\n        let regex=/[0-9]{10}/g;\r\n        let ans2=Text.match(regex);\r\n        let a2= ans2.toString();\r\n        setText(a2);\r\n        document.getElementById('preview').innerHTML=`${ans2.length} Number found`\r\n        document.getElementById('preview').style.color='green';\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    // let toggleMode=()=>{\r\n    //         if(Mode.backgroundColor==='white'){\r\n    //         setMode({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         setmodeBtn(\"Enable Light Mode\")\r\n    //     }\r\n    //     else{\r\n    //         setMode({\r\n    //             color:'black',\r\n    //             backgroundColor:'white'\r\n    //         })\r\n    //         setmodeBtn(\"Enable Dark Mode\");\r\n    //     }\r\n    // }\r\n  return (\r\n    <>\r\n    <div className='container' >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={Text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\" placeholder='Enter text here' style={{backgroundColor:props.mode==='dark'?'#343a40':'white',color:props.mode==='dark'?'white':'black',resize:'none'}}></textarea>\r\n        </div>\r\n        <button className='btn btn-primary' onClick={handleOnClickU}>Convert to uppercase</button>\r\n        <button className='btn btn-danger mx-2' onClick={handleOnClickL}>Convert to LowerCase</button>\r\n        <button className='btn btn-warning mx-2' onClick={handleOnClickClear}>Clear text</button>\r\n        <button className='btn btn-success mx-2' onClick={handleCopy}>Copy text</button>\r\n        <button className='btn btn-info mx-2' onClick={handleRemoveWhitespace}>Remove WhiteSpace</button>\r\n        {/* <button className='btn btn-warning mx-2 my-3' onClick={toggleMode}>{modeBtn}</button> */}\r\n        <button className='btn btn-danger mx-2' onClick={handleOnClickExtractNumber}>Extract Number</button>\r\n        <button className='btn btn-dark mx-2' onClick={handleOnClickExtractMail}>Extract email</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2>Your text summary : </h2>\r\n        <p>{Text.split(\" \").length} words and {Text.length} characters</p>\r\n        <p>{0.008 * Text.split(\" \").length} minutes to read</p>\r\n        <h2>Preview : </h2>\r\n        <p id='preview'></p>\r\n        <p>{Text.length>0?Text:\"Enter text above to preview here\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport { useState } from 'react';\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  let toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor='#343a40'\n      document.body.style.color='white'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      document.body.style.color='black'\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtills\" mode={mode} toggleMode={toggleMode}/>\n    <div className='container my-3' >\n    {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<TextForm heading ='Enter the text below' mode={mode}/>}/>\n        </Routes> */}\n        <TextForm heading ='Enter the text below' mode={mode}/>\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}